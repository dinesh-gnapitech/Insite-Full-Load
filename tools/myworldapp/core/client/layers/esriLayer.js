import ImageLayer from 'ol/layer/Image';
import ArcGISRestSource from 'ol/source/ImageArcGISRest';
import { MissingImplementationError } from 'myWorld/base/errors';

/**
 * Layer that is generated by an EsriDatasource instance
 */
export class EsriLayer extends ImageLayer {
    constructor(options) {
        const source = new ArcGISRestSource({
            ratio: 1,
            url: options.url,
            params: {}
        });
        const layerOptions = {
            source,
            ...options
        };
        super(layerOptions);
        this._getLayerIDsMethod = null;
    }
    authenticate(token) {
        this._updateParamValue('TOKEN', token);
    }
    setGetLayerIDsMethod(method) {
        this._getLayerIDsMethod = method;
    }
    onAdd(map) {
        this.setLayersFromZoom(map);
        map.on('moveend', this.setLayersFromZoom.bind(this, map));
        return false;
    }
    setLayers(layers) {
        this._updateParamValue('LAYERS', 'show:' + layers.join(','));
    }
    setLayersFromZoom(map) {
        if (!this.setLayers) {
            throw new MissingImplementationError('Layer does not implement setLayers()');
        }

        if (this._getLayerIDsMethod == null) {
            throw new MissingImplementationError(
                'Layer does not have a method for fetching layer IDs to display set'
            );
        }

        const layerIds = this._getLayerIDsMethod(map.getView().getZoom(), false);
        if (layerIds) this.setLayers(layerIds);
    }
    _updateParamValue(paramName, value) {
        const source = this.getSource();
        const params = source.getParams();
        params[paramName] = value;
        source.updateParams(params);
    }
}

export default EsriLayer;
